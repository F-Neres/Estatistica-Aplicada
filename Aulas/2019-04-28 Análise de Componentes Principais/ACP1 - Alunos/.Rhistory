for(i in 1:dim(cargas)[1]){
comunalidade[i] <- sum(cargas[i,]^2)
}
d <- data.frame(Var = nomes_variaveis, Comunalidade = comunalidade)
return(d)
}
comunalidades(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:3])
# Gráficos
plot(ajuste)
biplot(ajuste)
###############################################################################################
#                         Análise de Componentes Principais
###############################################################################################
library(dplyr)
setwd("E:/UNICID/Análise de Componentes Principais/ACP1 - Alunos")
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_poluicao <- read.csv('dados-poluicao.csv', sep = ';', dec = ',')
glimpse(dados_poluicao)
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Correlações
qtd_componentes <- 4
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Correlações
qtd_componentes <- 3
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:4])
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:3])
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=FALSE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Correlações
qtd_componentes <- 2
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Cargas
loadings(ajuste)
glimpse(dados_poluicao)
glimpse(dados_poluicao)
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
# Correlações
qtd_componentes <- 4
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_passaros <- read.csv('dados-passaros.csv', sep = ';', dec = ',')
glimpse(dados_passaros)
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Ajuste do modelo
dados_passaros[, -1]
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
glimpse(dados_passaros)
# Scree Plot
plot(ajuste, type="lines")
dados
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_passaros <- read.csv('dados-passaros.csv', sep = ';', dec = ',')
view(dados_passaros)
dados_passaros
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_passaros[-1]), cargas = ajuste$loadings[,1:2])
# Correlações
qtd_componentes <- 2
correlacoes(nomes_variaveis = names(dados_passaros[-1]), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
############################# Exercício MC ##################################
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_mc = read.csv('dados_mc.csv', sep = ';', dec = ',')
glimpse(dados_mc)
dados_analise <- dados_mc %>%
mutate(Saturated.Fat = as.numeric(Saturated.Fat),
Trans.Fat = as.numeric(Trans.Fat),
Total.Fat = as.numeric(Total.Fat)) %>%
select(-Category, -Item, -Serving.Size)
# Ajuste do modelo
ajuste <- princomp(dados_analise, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Comparando os tipos de alimentos
escores <- ajuste$scores
escores
dados <- bind_cols(dados_mc, escores)
?bind_cols
# Comparando os tipos de alimentos
escores <- data.frame(ajuste$scores)
glimpse(escores)
escores$Comp.1
dados <- bind_cols(dados_mc, escores)
glimpse(dados)
dados_mc$comp1 <- ajuste$scores[,1]
dados_mc$comp2 <- ajuste$scores[,2]
dados_mc$comp3 <- ajuste$scores[,3]
dados_mc$comp4 <- ajuste$scores[,4]
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
glimpse(dados)
modelo1 <- lm(Comp.1 ~ Category, data = dados); summary(modelo1)
dados2$c1 <- ajuste$loadings
dados2$c1 <- ajuste$scores
dados2 <- dados_mc
dados2$c1 <- ajuste$scores
modelo1 <- lm(c1 ~ Category, data = dados2); summary(modelo1)
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
modelo1 <- lm(Comp.1 ~ Category, data = dados); summary(modelo1)
# Ajuste do modelo
ajuste <- princomp(dados_analise, cor=TRUE)
# Scree Plot
plot(ajuste, type="lines")
# Impressão da variância explicada
summary(ajuste)
# Correlações
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_analise), cargas = ajuste$loadings[,1:4])
# Correlações
qtd_componentes <- 4
correlacoes(nomes_variaveis = names(dados_analise), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Correlações
qtd_componentes <- 4
correlacoes(nomes_variaveis = names(dados_analise), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
dados_mc$comp1 <- ajuste$scores[,1]
dados_mc$comp2 <- ajuste$scores[,2]
dados_mc$comp3 <- ajuste$scores[,3]
dados_mc$comp4 <- ajuste$scores[,4]
# Modelo de regressão
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
modelo2 <- lm(comp2 ~ Category, data = dados_mc); summary(modelo2)
modelo3 <- lm(comp3 ~ Category, data = dados_mc); summary(modelo3)
modelo4 <- lm(comp4 ~ Category, data = dados_mc); summary(modelo4)
table(dados$Category)
# Modelo de regressão
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
correlacoes(nomes_variaveis = names(dados_analise), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Modelo de regressão
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
modelo2 <- lm(comp2 ~ Category, data = dados_mc); summary(modelo2)
modelo3 <- lm(comp3 ~ Category, data = dados_mc); summary(modelo3)
modelo4 <- lm(comp4 ~ Category, data = dados_mc); summary(modelo4)
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_diabetes = read.csv('diabetes.csv', sep = ';', dec = '.')
glimpse(dados_diabetes)
# Ajuste do modelo
ajuste <- princomp(dados_diabetes[,-9], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_diabetes[,-9]), cargas = ajuste$loadings[,1:4])
# Scree Plot
plot(ajuste, type="lines")
# Correlações
qtd_componentes <- 4
correlacoes(nomes_variaveis = names(dados_diabetes[,-9]), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Modelo de regressão logística
dados_diabetes$comp1 <- ajuste$scores[,1]
dados_diabetes$comp2 <- ajuste$scores[,2]
dados_diabetes$comp3 <- ajuste$scores[,3]
dados_diabetes$comp4 <- ajuste$scores[,4]
modelo1 <- glm(Outcome ~ comp1 + comp2 + comp3 + comp4, data = dados_diabetes)
summary(modelo1)
###############################################################################################
#                         Análise de Componentes Principais
###############################################################################################
library(foreign)
library(psych)
library(stats)
library(dplyr)
library(corrplot)
library(mvnormtest)
library(GPArotation)
setwd("D:/UNICID/Análise de Componentes Principais/ACP1 - Alunos")
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados <- read.csv('dados-evaporador-industrial.csv', sep = ';', dec = ',')
glimpse(dados)
# Ajuste do modelo
ajuste <- princomp(dados, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Correlações
correlacoes <- function(nomes_variaveis, cargas, desvios){
n_colunas <- length(desvios)
n_linhas <- dim(cargas)[1]
matriz_cor <- matrix(0, n_linhas, n_colunas)
for(i in 1:n_linhas){
for(j in 1:n_colunas){
matriz_cor[i,j] <- cargas[i,j]*desvios[j]
}
}
d <- data.frame(Var = nomes_variaveis, matriz_cor)
return(d)
}
qtd_componentes <- 2
correlacoes(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
correlacoes(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
qtd_componentes <- 3
correlacoes(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Importância das variáveis (comunalidades)
comunalidades <- function(nomes_variaveis, cargas){
comunalidade <- array()
for(i in 1:dim(cargas)[1]){
comunalidade[i] <- sum(cargas[i,]^2)
}
d <- data.frame(Var = nomes_variaveis, Comunalidade = comunalidade)
return(d)
}
comunalidades(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:2])
# Gráficos
plot(ajuste)
biplot(ajuste)
install.packages("ggfortify")
library(ggfortify)
# Ajuste do modelo
ajuste <- princomp(dados, cor=TRUE)
ajuste
prcomp(dados)
?prcomp
prcomp(dados, cor = TRUE)
prcomp(scale(dados))
prcomp(scale(dados))
ajuste
autoplot(prcomp(scale(dados)))
biplot(ajuste)
dim(dados)
ajuste2 <- prcomp(scale(dados))
ajuste2
summary(ajuste)
# Cargas
loadings(ajuste)
names(ajuste2)
ajuste$sdev
ajuste2$scale
glimpse(dados)
autoplot(prcomp(scale(dados)), data = dados,
loadings = TRUE)
autoplot(prcomp(scale(dados)), data = dados, #colour = 'Species',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 3)
# Gráficos
plot(ajuste)
correlacoes(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
qtd_componentes <- 2
correlacoes(nomes_variaveis = names(dados), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
###############################################################################################
#                         Análise de Componentes Principais
###############################################################################################
library(dplyr)
setwd("D:/UNICID/Análise de Componentes Principais/ACP1 - Alunos")
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_poluicao <- read.csv('dados-poluicao.csv', sep = ';', dec = ',')
glimpse(dados_poluicao)
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
ajuste <- princomp(dados_poluicao, cor=FALSE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Impressão da variância explicada
summary(ajuste)
# Cargas
loadings(ajuste)
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:4])
# Correlações
qtd_componentes <- 2
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:4])
qtd_componentes <- 3
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_passaros <- read.csv('dados-passaros.csv', sep = ';', dec = ',')
glimpse(dados_passaros)
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Cargas
loadings(ajuste)
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_passaros[-1]), cargas = ajuste$loadings[,1:2])
ajuste$loadings[,1:2]
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_passaros[-1]), cargas = ajuste$loadings[,1])
ajuste$loadings[,1:2]
ajuste$loadings[,1]
qtd_componentes <- 1
correlacoes(nomes_variaveis = names(dados_passaros[-1]), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
names(ajuste)
ajuste <- principal(dados_poluicao, cor=TRUE)
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
ajuste2 <- principal(dados_poluicao, cor=TRUE)
ajuste
ajuste2
ajuste2 <- principal(dados_poluicao, cor=TRUE, nfactors=3)
ajuste2 <- principal(dados_poluicao, nfactors=3)
ajuste2
# Correlações (somente se feito com matriz de correlações)
qtd_componentes <- 3
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
ajuste2
loadings(ajuste)
ajuste2
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:3])
qtd_componentes <- 3
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
ajuste2$communality
ajuste2 <- principal(scale(dados_poluicao), nfactors=3)
ajuste2
ajuste2
ajuste
loadings(ajuste)
ajuste2
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
# Importância das variáveis (comunalidades)
comunalidades(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:3])
ajuste2$communality
ajuste2
loadings(ajuste)
correlacoes(nomes_variaveis = names(dados_poluicao), cargas = ajuste$loadings[,1:qtd_componentes], desvios = ajuste$sdev[1:qtd_componentes])
dados <- read.csv('dados-evaporador-industrial.csv', sep = ';', dec = ',')
glimpse(dados)
# Ajuste do modelo - escolha do número de componentes
ajuste1 <- princomp(dados, cor=TRUE)
# Impressão da variância explicada
summary(ajuste1)
# Scree Plot
plot(ajuste1, type="lines")
# Ajuste do modelo com número de componentes definido
ajuste2 <- principal(dados, covar = FALSE, nfactors = 3)
# Interpretação
ajuste2
# Comunalidades
ajuste2$communality
# Teste de esfericidade de Bartllet
bartlett.test(dados)
prcomp(scale(dados))
autoplot(ajuste2)
plot(ajuste1)
plot(ajuste2)
autoplot(prcomp(scale(dados)), data = dados, #colour = 'Species',
loadings = TRUE, loadings.colour = 'blue',
loadings.label = TRUE, loadings.label.size = 3)
plot(ajuste2)
teste <- prcomp(scale(dados))
names(teste)
teste$x
ajuste2$scores
# Ajuste do modelo
ajuste <- princomp(dados_poluicao, cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Ajuste do modelo
ajuste_cov <- princomp(dados_poluicao, cor=FALSE)
ajuste_cor <- princomp(dados_poluicao, cor=TRUE)
# Impressão da variância explicada
summary(ajuste_cov)
summary(ajuste_cor)
# Scree Plot
plot(ajuste_cov, type="lines")
plot(ajuste_cor, type="lines")
# Ajuste do modelo com número de componentes definido
ajuste_cov2 <- principal(dados, covar = TRUE, nfactors = 1)
ajuste_cor2 <- principal(dados, covar = FALSE, nfactors = 3)
# Interpretação (correlações)
ajuste_cov2
ajuste_cor2
# Comunalidades
ajuste_cov2$communality
ajuste_cor2$communality
# Teste de esfericidade de Bartllet
bartlett.test(dados_poluicao)
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_passaros <- read.csv('dados-passaros.csv', sep = ';', dec = ',')
glimpse(dados_passaros)
# Teste de esfericidade de Bartllet
bartlett.test(dados_passaros)
# Ajuste do modelo
ajuste <- princomp(dados_passaros[, 2:6], cor=TRUE)
# Impressão da variância explicada
summary(ajuste)
# Scree Plot
plot(ajuste, type="lines")
# Ajuste do modelo com número de componentes definido
ajuste_cov2 <- principal(dados_poluicao, covar = TRUE, nfactors = 1)
ajuste_cor2 <- principal(dados_poluicao, covar = FALSE, nfactors = 3)
# Interpretação (correlações)
ajuste_cov2
ajuste_cor2
# Ajuste do modelo com número de componentes definido
ajuste2 <- principal(dados_passaros, covar = FALSE, nfactors = 1)
# Interpretação (correlações)
ajuste2
# Comunalidades
ajuste2$communality
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_mc = read.csv('dados_mc.csv', sep = ';', dec = ',')
glimpse(dados_mc)
# Teste de esfericidade de Bartllet
bartlett.test(dados_passaros)
# Arrumando dados
dados_analise <- dados_mc %>%
mutate(Saturated.Fat = as.numeric(Saturated.Fat),
Trans.Fat = as.numeric(Trans.Fat),
Total.Fat = as.numeric(Total.Fat)) %>%
select(-Category, -Item, -Serving.Size)
# Ajuste do modelo
ajuste <- princomp(dados_analise, cor=TRUE)
# Scree Plot
plot(ajuste, type="lines")
# Impressão da variância explicada
summary(ajuste)
# Ajuste do modelo com número de componentes definido
ajuste2 <- principal(dados_analise, covar = FALSE, nfactors = 4)
# Interpretação (correlações)
ajuste2
# Comunalidades
ajuste2$communality
ajuste2$scores
# Comparando os tipos de alimentos
dados_mc$comp1 <- ajuste2$scores[,1]
dados_mc$comp2 <- ajuste2$scores[,2]
dados_mc$comp3 <- ajuste2$scores[,3]
dados_mc$comp4 <- ajuste2$scores[,4]
# Comparando médias
tabela <- dados_mc %>%
group_by(Category) %>%
summarise(media_c1 = mean(comp1, na.rm = TRUE),
media_c2 = mean(comp2, na.rm = TRUE),
media_c3 = mean(comp3, na.rm = TRUE),
media_c4 = mean(comp4, na.rm = TRUE))
tabela
# Modelo de regressão
modelo1 <- lm(comp1 ~ Category, data = dados_mc); summary(modelo1)
modelo2 <- lm(comp2 ~ Category, data = dados_mc); summary(modelo2)
modelo3 <- lm(comp3 ~ Category, data = dados_mc); summary(modelo3)
modelo4 <- lm(comp4 ~ Category, data = dados_mc); summary(modelo4)
# Entrada dos dados e extração das componentes principais com a matriz de correlação
dados_diabetes = read.csv('diabetes.csv', sep = ';', dec = '.')
glimpse(dados_diabetes)
# Teste de esfericidade de Bartllet
bartlett.test(dados_passaros)
# Teste de esfericidade de Bartllet
bartlett.test(dados_diabetes)
# Ajuste do modelo
ajuste <- princomp(dados_diabetes[,-9], cor=TRUE)
# Scree Plot
plot(ajuste, type="lines")
# Impressão da variância explicada
summary(ajuste)
# Ajuste do modelo com número de componentes definido
ajuste2 <- principal(dados_diabetes, covar = FALSE, nfactors = 4)
# Interpretação (correlações)
ajuste2
# Ajuste do modelo com número de componentes definido
ajuste2 <- principal(dados_diabetes[,-9], covar = FALSE, nfactors = 4)
# Interpretação (correlações)
ajuste2
# Comunalidades
ajuste2$communality
# Comunalidades
ajuste2$communality
dados_diabetes$comp1 <- ajuste2$scores[,1]
dados_diabetes$comp2 <- ajuste2$scores[,2]
dados_diabetes$comp3 <- ajuste2$scores[,3]
dados_diabetes$comp4 <- ajuste2$scores[,4]
modelo1 <- glm(Outcome ~ comp1 + comp2 + comp3 + comp4, data = dados_diabetes)
summary(modelo1)
