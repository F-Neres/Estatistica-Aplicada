data("iris")
head(iris)
Y1 <- iris$Sepal.Length
X1 <- iris$Species
anova(lm(Y1~X1))
resulta <- aov(lm(Y1~X1))
summary(resulta)
TukeyHSD(resulta)
HATCO <- read.csv("C:/Users/logonlb/Desktop/2018-11-24 MANOVA/HATCO.csv", header=FALSE)
View(HATCO)
str(hatco)
str(HATCO)
hatco <- HATCO
View(hatco)
hatco$X8[hatco$X8==1] <- "large"
hatco$X8[hatco$X8==0] <- "small"
HATCO <- read.csv("C:/Users/logonlb/Desktop/2018-11-24 MANOVA/HATCO.csv")
View(HATCO)
hatco <- HATCO
hatco$X8[hatco$X8==1] <- "large"
hatco$X8[hatco$X8==0] <- "small"
hatco$X8<-as.factor(hatco$X8)
################
## Exemplo 1 - teste t
################
# X9- nível de uso (quanto que a empresa compra da hatco)
plot(X9 ~ X8,data=hatco, ylab="% de produtos comprados da HATCO" )
table(hatco$X8) # balanceado!
# verificar as suposições
shapiro.test(hatco$X9)               # variavel normal no geral
shapiro.test(hatco$X9[hatco$X8=="small"]) # variavel normal para grupo 0
shapiro.test(hatco$X9[hatco$X8=="large"]) # variavel normal para grupo 1
if(!require(car)){install.packages("car")}
car::leveneTest(hatco$X9,hatco$X8)  # Homocedasticidade
t.test(X9 ~ X8,data=hatco)
anova(lm(X9 ~ X8,data=hatco))
summary(aov(lm(X9 ~ X8,data=hatco)))
# y1 + y2 ~ x1
# X9 + X10 ~ X8
shapiro.test(hatco$X10)
shapiro.test(hatco$X10[hatco$X8=="small"])
shapiro.test(hatco$X10[hatco$X8=="large"])
car::leveneTest(hatco$X10,hatco$X8)
if(!require(mvoutlier)){install.packages('mvoutlier')}
require(mvoutlier)
install.packages('mvoutlier')
if(!require(mvoutlier)){install.packages('mvoutlier')}
par(mfrow=c(2,2))
require(mvoutlier)
par(mfrow=c(2,2))
mvoutlier::aq.plot(hatco[c("X9",'X10')]) # nao tem outliers
boxM?
?boxM
?boxM
par(mfrow=c(1,1))
if(!require(biotools)){install.packages("biotools")}
require(biotools)
biotools::boxM(cbind(hatco$X9,hatco$X10), hatco$X8) # equivalencia das matrizes var-covar
if(!require(DescTools)){install.packages("DescTools")}
require(DescTools)
with(hatco,
DescTools::HotellingsT2Test(
cbind(X9,X10) ~ X8))
summary(manova(lm(cbind(X9,X10) ~ X8, data=hatco))) #Não exige o pacote DescTools
################
# Exemplo 3 - ANOVA
################
# Y1 ~ X1 + X2
# X13: 1 = industry A, 0 = other industries
hatco$X13[hatco$X13==0]<-"other"
hatco$X13[hatco$X13==1]<-"industry"
hatco$X13<-as.factor(hatco$X13)
table(hatco$X13, hatco$X8) # balanceado!
# Two way ANOVA
summary.aov(lm(X9 ~ X8+X13+X8:X13, data=hatco))
ggplot(hatco, aes(x=X8, y=X9, fill=X13))+theme_classic()+
geom_boxplot()+
xlab("Tipo de Empresa")+ylab("Nível de Uso")
install.packages("tydeverse")
install.packages("tydeverse")
install.packages("tidyverse")
require(tidyverse)
ggplot(hatco, aes(x=X8, y=X9, fill=X13))+theme_classic()+
geom_boxplot()+
xlab("Tipo de Empresa")+ylab("Nível de Uso")
# Teste Post HOC
modelo <- aov(lm(X9 ~ X8*X13, data=hatco))
TukeyHSD(modelo) # se desse ANOVA significativa
################
# Exemplo 4 - MANOVA
################
# Suposiçoes
# Tamanho amostral
table(hatco$X8, hatco$X13)
# Normalidade
if(!require(mvnormtest)){install.packages("mvnormtest")}
C <- t(hatco[,c("X9","X10")])
mvnormtest::mshapiro.test(C)
mvoutlier::aq.plot(hatco[c("X9",'X10')]) # Outliers
par(mfrow=c(1,1))
plot(hatco$X9, hatco$X10)                # Linearidade (>1 vd)
cor(hatco$X9, hatco$X10)                 # Multicolinearidade
# Homogeneidade da variância-covariância (M de Box) (>1 vd)
biotools::boxM(cbind(hatco$X9,hatco$X10), hatco$X13) # OK!
biotools::boxM(cbind(hatco$X9,hatco$X10), hatco$X8)  # Nao ok...
# Homogeneidade das variâncias dos erros (Levene)
car::leveneTest(hatco$X9,hatco$X8)    # Homocedasticidade
car::leveneTest(hatco$X9,hatco$X13)   # Homocedasticidade
car::leveneTest(hatco$X10,hatco$X8)   # Homocedasticidade
car::leveneTest(hatco$X10,hatco$X13)  # Homocedasticidade
# Estimar, avaliar e interpretar
modelo<-lm(
cbind(X9, X10)~X8*X13,
data=hatco)
summary(manova(modelo))         # type II ANOVA table
car::Anova(modelo)
car::Anova(update(modelo, X9 ~ .))
car::Anova(update(modelo, X10 ~ .)) #mais significante para X10
# So que nao permite visualizar as relacoes das variaveis
if(!require(heplots)){install.packages('heplots')}
require(heplots)
if(!require(jmv)){install.packages("jmv")}
require(heplots)
heplots::heplot(modelo, size="evidence",lwd=.5)
heplots::heplot(modelo, size="effect",
add=T, lwd=4, term.labels=F)
## add interaction means
intMeans <- heplots::termMeans(modelo, 'X8:X13', abbrev.levels=5)
points(intMeans[,1], intMeans[,2], pch=16, cex=2, col="black")
text(intMeans[,1], intMeans[,2], rownames(intMeans), adj=c(0.5,1), col="brown")
lines(intMeans[c(1,3),1], intMeans[c(1,3),2], col="brown")
lines(intMeans[c(2,4),1], intMeans[c(2,4),2], col="brown")
##
# efeito sai da elipse "Error"
# A elipse X8 (main effect) é junto com a elipse "Group"
print(car::linearHypothesis(modelo,
c("X8small", "X13other"),
title="Main effects"), SSP = FALSE)
print(car::linearHypothesis(modelo, c("X8small", "X13other", "X8small:X13other"),
title="Groups"), SSP = FALSE)
heplots::heplot(modelo, hypotheses=list("Main effects" = 	c("X8small", "X13other")),
col = "red", cex=1.25)
heplots::heplot(modelo,
hypotheses=list('Group'=
c("X8small", "X13other", "X8small:X13other")),
col = "blue",
add=TRUE,
cex = 1.25)
passo1<-lm(X9
~X8*X13,
data=hatco)
summary(passo1)       # Pegar interceptos
summary(aov(passo1))  # Pegar F e p-valor
passo2<-lm(X10
~X8*X13+X9,
data=hatco)
passo2<-lm(X10
~X8*X13+X9,
data=hatco)
summary(passo2)       # Pegar interceptos
